apiVersion: v1
kind: ConfigMap
metadata:
    name: {{ include "lifemonitor-web.fullname" . }}-nginx-config
    labels:
        app.kubernetes.io/name: {{ include "lifemonitor-web.name" . }}
        helm.sh/chart: {{ include "lifemonitor-web.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
    app.conf: |-
        # Set upstream server for the LifeMonitor Back-End
        upstream api {
            # fail_timeout=0 means we always retry an upstream even if it failed
            # to return a good HTTP response
            hash $binary_remote_addr consistent;
            server api-backend:8000 fail_timeout=0;

            keepalive 32;
        }

        upstream api-static {
          # fail_timeout=0 means we always retry an upstream even if it failed
          # to return a good HTTP response
          hash $binary_remote_addr consistent;
          server api-nginx:80 fail_timeout=0;

          keepalive 32;
        }

        # Set upstream server for the LifeMonitor Back-End
        upstream wss {
            # fail_timeout=0 means we always retry an upstream even if it failed
            # to return a good HTTP response
            hash $binary_remote_addr consistent;
            server api-wss:8001 fail_timeout=0;

            keepalive 32;
        }

        map $http_upgrade $connection_upgrade {
            default upgrade;
            '' close;
        }

        {{- if .Values.monitoring.enabled -}}
        server {
            server_name {{ .Values.externalServerName }} {{ include "lifemonitor-web.name" . }}-metrics.default {{ include "lifemonitor-web.name" . }}-metrics.default.svc.cluster.local;

            # save logs here
            access_log /var/log/nginx/metrics.access.log extended;
            error_log /var/log/nginx/metrics.error.log;

            proxy_read_timeout 600;
            proxy_connect_timeout 600;
            proxy_send_timeout 600;

            listen 9090;
            client_max_body_size 4G;

            # set the correct host(s) for your site
            #server_name localhost;
            keepalive_timeout 60;
            etag on;

            # ssl_certificate /nginx/certs/lm.crt;
            # ssl_certificate_key /nginx/certs/lm.key;

            # force HTTP traffic to HTTPS
            # error_page  497 http://$host:4200$request_uri;

            # expose extended metrics
            location = /metrics {
                stub_status on;
            }
        }
        {{- end -}}

        server {
            server_name {{ .Values.externalServerName }} {{ include "lifemonitor-web.name" . }}-metrics.default {{ include "lifemonitor-web.name" . }}-metrics.default.svc.cluster.local;

            proxy_read_timeout 600;
            proxy_connect_timeout 600;
            proxy_send_timeout 600;

            listen 4200;
            client_max_body_size 4G;

            # set the correct host(s) for your site
            #server_name localhost;
            keepalive_timeout 60;
            etag on;

            # ssl_certificate /nginx/certs/lm.crt;
            # ssl_certificate_key /nginx/certs/lm.key;

            # force HTTP traffic to HTTPS
            error_page  497 http://$host:4200$request_uri;

            # disable standard nginx metrics
            location = /nginx-metrics {
                deny all;
            }

            # disable /metrics endpoint
            location = /metrics {
                deny all;
            }

            # wrap api
            location ^~ /api/  {

                rewrite /api/(.*) /$1  break;

                proxy_redirect          off;

                # set uppstream
                proxy_pass              https://api/;

                # rewrite headers
                # proxy_pass_header     Server;

                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Scheme $scheme;
                proxy_set_header        Cookie $http_cookie;

                # proxy_http_version    1.1;
                # proxy_set_header      Upgrade $http_upgrade;
                # proxy_set_header      Connection 'upgrade';
                proxy_set_header        Host $host;

                # various proxy settings
                proxy_connect_timeout   600;
                proxy_read_timeout      600;
                proxy_send_timeout      600;
            }

            location ~ ^/(static|openapi.*) {
              # disable redirects
              proxy_redirect          off;

              # set uppstream
              proxy_pass              http://api-static;

              # rewrite headers
              # proxy_pass_header       Server;
              proxy_set_header        X-Real-IP $remote_addr;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header        X-Scheme $scheme;
              proxy_set_header        Host $host;
              proxy_set_header        Cookie $http_cookie;

              # various proxy settings
              proxy_connect_timeout   600;
              proxy_read_timeout      600;
              proxy_send_timeout      600;
              #proxy_intercept_errors  on;
          }

            location ~ ^/(account|oauth2|jobs|github|integrations) {
                # disable redirects
                proxy_redirect          off;

                # set uppstream
                proxy_pass              https://api;

                # rewrite headers
                # proxy_pass_header       Server;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Scheme $scheme;
                proxy_set_header        Host $host;
                proxy_set_header        Cookie $http_cookie;

                # various proxy settings
                proxy_connect_timeout   600;
                proxy_read_timeout      600;
                proxy_send_timeout      600;
                #proxy_intercept_errors  on;
            }

            location /socket.io/ {
                proxy_pass              https://wss;
                proxy_http_version      1.1;
                # proxy_pass_header     Server;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Scheme $scheme;
                proxy_set_header        Upgrade $http_upgrade;
                proxy_set_header        Connection $connection_upgrade;
                proxy_set_header        Host $host;
                proxy_set_header        Cookie $http_cookie;
            }


            location / {
                # resolver 127.0.0.11 ipv6=off valid=30s;
                proxy_redirect off;

                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Scheme $scheme;
                proxy_set_header        Host {{ .Values.externalServerName }};
                #proxy_set_header        X-NginX-Proxy true;

                proxy_connect_timeout   600;
                proxy_read_timeout      600;
                proxy_send_timeout      600;
                #proxy_intercept_errors  on;

                access_log off;

                root   /app;
                index  index.html index.htm;
                try_files $uri $uri/ /index.html =404;
            }
        }


    nginx.conf: |-
        # Enables the use of JIT for regular expressions to speed-up their processing.
        pcre_jit on;

        # logs
        pid        /var/run/openresty/nginx.pid;
        error_log  /var/log/nginx/nginx.error.log crit;

        events {
            worker_connections 1024;
        }

        http {

            include mime.types;

            default_type application/octet-stream;

            # Enables or disables the use of underscores in client request header fields.
            # When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid and become subject to the ignore_invalid_headers directive.
            # underscores_in_headers off;

            server_names_hash_bucket_size  128;
            server_names_hash_max_size 512;
        
            proxy_headers_hash_max_size 512;
            proxy_headers_hash_bucket_size 128;

            # Define a verbose log format
            log_format extended 
            '[$http_x_forwarded_for] '
            '"$request" $status ($body_bytes_sent bytes) - "$http_referer", "$http_user_agent", "$http_x_request_domain"';
            
            # Configure Log files
            access_log /usr/local/openresty/nginx/logs/access.log extended;
            # error_log /usr/local/openresty/nginx/logs/error.log warn;

            # Extra settings
            client_body_temp_path /var/run/openresty/nginx-client-body;
            proxy_temp_path /var/run/openresty/nginx-proxy;
            fastcgi_temp_path /var/run/openresty/nginx-fastcgi;
            uwsgi_temp_path /var/run/openresty/nginx-uwsgi;
            scgi_temp_path /var/run/openresty/nginx-scgi;

            sendfile on;
            #tcp_nopush     on;

            #keepalive_timeout  0;
            keepalive_timeout 65;

            #gzip  on;

            include /etc/nginx/conf.d/*.conf;

            # Don't reveal OpenResty version to clients.
            # server_tokens off;
        }

