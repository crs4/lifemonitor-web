# Copyright (c) 2020-2024 CRS4
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
---
apiVersion: v1
kind: ConfigMap
metadata:
    name: {{ include "lifemonitor-web.fullname" . }}-nginx-config
    labels:
        app.kubernetes.io/name: {{ include "lifemonitor-web.name" . }}
        helm.sh/chart: {{ include "lifemonitor-web.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
    app.conf: |-
        # Set upstream server for the LifeMonitor Back-End
        upstream api {
            # fail_timeout=0 means we always retry an upstream even if it failed
            # to return a good HTTP response
            hash $binary_remote_addr consistent;
            server api-backend:8000 fail_timeout=0;

            keepalive 32;
        }

        upstream api-static {
          # fail_timeout=0 means we always retry an upstream even if it failed
          # to return a good HTTP response
          hash $binary_remote_addr consistent;
          server api-nginx:80 fail_timeout=0;

          keepalive 32;
        }

        # Set upstream server for the LifeMonitor Back-End
        upstream wss {
            # fail_timeout=0 means we always retry an upstream even if it failed
            # to return a good HTTP response
            hash $binary_remote_addr consistent;
            server api-wss:8001 fail_timeout=0;

            keepalive 32;
        }

        map $http_upgrade $connection_upgrade {
            default upgrade;
            '' close;
        }

        {{- if .Values.monitoring.enabled -}}
        server {
            server_name {{ .Values.externalServerName }} {{ include "lifemonitor-web.name" . }}-metrics.default {{ include "lifemonitor-web.name" . }}-metrics.default.svc.cluster.local;

            proxy_read_timeout 600;
            proxy_connect_timeout 600;
            proxy_send_timeout 600;

            listen 9090;
            client_max_body_size 4G;

            # set the correct host(s) for your site
            #server_name localhost;
            keepalive_timeout 60;
            etag on;

            # ssl_certificate /nginx/certs/lm.crt;
            # ssl_certificate_key /nginx/certs/lm.key;

            # force HTTP traffic to HTTPS
            # error_page  497 http://$host:4200$request_uri;

            # expose standard nginx metrics
            location = /metrics {
                stub_status on;

                access_log    off;
                log_not_found off;
            }
        }
        {{- end -}}

        server {
            server_name {{ .Values.externalServerName }} {{ include "lifemonitor-web.name" . }}-metrics.default {{ include "lifemonitor-web.name" . }}-metrics.default.svc.cluster.local;

            proxy_read_timeout 600;
            proxy_connect_timeout 600;
            proxy_send_timeout 600;

            listen 4200;
            client_max_body_size 4G;

            # set the correct host(s) for your site
            #server_name localhost;
            keepalive_timeout 60;
            etag on;

            # ssl_certificate /nginx/certs/lm.crt;
            # ssl_certificate_key /nginx/certs/lm.key;

            # force HTTP traffic to HTTPS
            error_page  497 http://$host:4200$request_uri;

            # define error pages
            error_page 404 /error/404;
            error_page 405 /error/405;
            error_page 429 /error/429;
            error_page 500 /error/500;
            error_page 502 /error/502;

            # location for error pages
            location ~ ^/error {
                # rewrite request uri to point to the api
                rewrite /error/(.*) /api/error/$1  break;

                # disable redirects
                proxy_redirect          off;

                # rewrite headers
                proxy_pass_header       Server;
                proxy_set_header        X-Real-IP $http_x_forwarded_for;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Scheme $scheme;
                proxy_set_header        Host $http_host;
                proxy_set_header        Cookie $http_cookie;
                proxy_set_header        X-Requested-With $http_x_requested_with;

                # various proxy settings
                proxy_connect_timeout   600;
                proxy_read_timeout      600;
                proxy_send_timeout      600;
                #proxy_intercept_errors  on;

                # set uppstream
                proxy_pass              https://api;

                # log errors using the extended format
                access_log /var/log/nginx/http.error.log custom_format;
            }

            # disable standard nginx metrics
            location = /nginx-metrics {
                # stub_status on;
                deny all;
            }

            # disable /metrics endpoint
            location = /metrics {
                deny all;
            }

            # wrap api
            location ^~ /api/  {

                rewrite /api/(.*) /$1  break;

                proxy_redirect          off;

                # set uppstream
                proxy_pass              https://api/;

                # rewrite headers
                # proxy_pass_header     Server;

                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Scheme $scheme;
                proxy_set_header        Cookie $http_cookie;

                # proxy_http_version    1.1;
                # proxy_set_header      Upgrade $http_upgrade;
                # proxy_set_header      Connection 'upgrade';
                proxy_set_header        Host $host;

                # various proxy settings
                proxy_connect_timeout   600;
                proxy_read_timeout      600;
                proxy_send_timeout      600;
            }

            location ~ ^/(static|openapi.*) {
              # disable redirects
              proxy_redirect          off;

              # set uppstream
              proxy_pass              http://api-static;

              # rewrite headers
              # proxy_pass_header       Server;
              proxy_set_header        X-Real-IP $remote_addr;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header        X-Scheme $scheme;
              proxy_set_header        Host $host;
              proxy_set_header        Cookie $http_cookie;

              # various proxy settings
              proxy_connect_timeout   600;
              proxy_read_timeout      600;
              proxy_send_timeout      600;
          }

            location ~ ^/(account|oauth2|jobs|github|integrations) {
                # disable redirects
                proxy_redirect          off;

                # set uppstream
                proxy_pass              https://api;

                # rewrite headers
                # proxy_pass_header       Server;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Scheme $scheme;
                proxy_set_header        Host $host;
                proxy_set_header        Cookie $http_cookie;

                # various proxy settings
                proxy_connect_timeout   600;
                proxy_read_timeout      600;
                proxy_send_timeout      600;
            }

            location /socket.io/ {
                proxy_pass              https://wss;
                proxy_http_version      1.1;
                # proxy_pass_header     Server;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Scheme $scheme;
                proxy_set_header        Upgrade $http_upgrade;
                proxy_set_header        Connection $connection_upgrade;
                proxy_set_header        Host $host;
                proxy_set_header        Cookie $http_cookie;
            }


            location / {
                # resolver 127.0.0.11 ipv6=off valid=30s;
                proxy_redirect off;

                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Scheme $scheme;
                proxy_set_header        Host {{ .Values.externalServerName }};
                #proxy_set_header        X-NginX-Proxy true;

                proxy_connect_timeout   600;
                proxy_read_timeout      600;
                proxy_send_timeout      600;
                #proxy_intercept_errors  on;

                access_log off;

                root   /app;
                index  index.html index.htm;
                try_files $uri $uri/ /index.html =404;
            }
        }


    nginx.conf: |-
        # Enables the use of JIT for regular expressions to speed-up their processing.
        pcre_jit on;

        # logs
        pid        /var/log/nginx/nginx.pid;
        error_log  /var/log/nginx/nginx.error.log warn;

        events {
            worker_connections 1024;
        }

        http {
            
            include mime.types;

            default_type application/octet-stream;

            # Enables or disables the use of underscores in client request header fields.
            # When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid and become subject to the ignore_invalid_headers directive.
            # underscores_in_headers off;

            # fix issues with large client headers
            proxy_headers_hash_max_size 512;
            proxy_headers_hash_bucket_size 128;

            # Define the log format
            log_format custom_format '$http_x_client_ip - $remote_user [$time_local] '
                            '"$request" $status $body_bytes_sent '
                            '"$http_referer" "$http_user_agent" - '
                            '$http_x_forwarded_for $request_time $request_length - '
                            '$connection $connection_requests $pipe - '
                            '$upstream_addr $upstream_status $upstream_cache_status '
                            '$upstream_response_time $upstream_response_length';

            # Configure Log files
            access_log /var/log/nginx/access.log custom_format;
            error_log  /var/log/nginx/error.log warn;

            
            # See Move default writable paths to a dedicated directory (#119)
            # https://github.com/openresty/docker-openresty/issues/119
            client_body_temp_path /var/run/nginx/nginx-client-body;
            proxy_temp_path /var/run/nginx/nginx-proxy;
            fastcgi_temp_path /var/run/nginx/nginx-fastcgi;
            uwsgi_temp_path /var/run/nginx/nginx-uwsgi;
            scgi_temp_path /var/run/nginx/nginx-scgi;


            # Defines a file that will store the process ID of the main process.            
            server_names_hash_bucket_size  128;

            sendfile on;
            #tcp_nopush     on;

            #keepalive_timeout  0;
            keepalive_timeout 65;

            #gzip  on;

            include /etc/nginx/conf.d/*.conf;

            # Don't reveal OpenResty version to clients.
            # server_tokens off;
        }
