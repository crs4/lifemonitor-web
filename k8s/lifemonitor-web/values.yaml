# Copyright (c) 2020-2024 CRS4
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Default values for lifemonitor-web.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: crs4/lifemonitor-web
  tag: latest
  pullPolicy: IfNotPresent

nameOverride: ''
fullnameOverride: ''

externalServerName: 'localhost'

# Manage maintenance mode
maintenanceMode:
  enabled: false
  # message: "The service is currently under maintenance. Please try again later."

# Setting for the LifeMonitor Backend API
backend:
  apiUrl: ''
  clientId: ''

service:
  type: NodePort
  port: 80

monitoring:
  enabled: false
  servicemonitor:
    enabled: false
  prometheus:
    namespace: kube-prometheus-stack
  loki:
    enabled: false
    url: http://loki:3100
    exporter:
      image: grafana/promtail:main-60ea954
      imagePullPolicy: IfNotPresent
      resources:
        requests:
          memory: 128Mi
          cpu: 0.1
        limits:
          memory: 256Mi
          cpu: 0.2

ingress:
  enabled: false
  className: nginx
  annotations: {}
  # kubernetes.io/tls-acme: "true"
  # configures the backend service
  hosts:
    - host: localhost
      paths:
        - '/'
  # configure TLS for the ingress
  tls:
    - secretName: lifemonitor-web-tls
      hosts:
        - localhost

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    memory: '4096Mi'
    cpu: '1000m'
  limits:
    memory: '7680Mi'
    cpu: '1800m'

nodeSelector: {}

tolerations: []

affinity: {}

extraVolumes: []

extraVolumeMounts: []
